// <auto-generated />
using GoodsApi.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GoodsApi.Migrations
{
    [DbContext(typeof(ShopContext))]
    partial class ShopContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("GoodOrder", b =>
                {
                    b.Property<string>("GoodsId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("OrdersId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("GoodsId", "OrdersId");

                    b.HasIndex("OrdersId");

                    b.ToTable("GoodOrder");
                });

            modelBuilder.Entity("GoodsApi.Models.BaseEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable((string)null);

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("GoodsApi.Models.Good", b =>
                {
                    b.HasBaseType("GoodsApi.Models.BaseEntity");

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.ToTable("goods");
                });

            modelBuilder.Entity("GoodsApi.Models.Order", b =>
                {
                    b.HasBaseType("GoodsApi.Models.BaseEntity");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("GoodOrder", b =>
                {
                    b.HasOne("GoodsApi.Models.Good", null)
                        .WithMany()
                        .HasForeignKey("GoodsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GoodsApi.Models.Order", null)
                        .WithMany()
                        .HasForeignKey("OrdersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
